#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NexonPlatform

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class NexonPlatform.DefaultWebBrowserAdapter
// 0x0038 (0x0060 - 0x0028)
class UDefaultWebBrowserAdapter : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DefaultWebBrowserAdapter">();
	}
	static class UDefaultWebBrowserAdapter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefaultWebBrowserAdapter>();
	}
};

// Class NexonPlatform.NXPShowCartDialogInterface
// 0x0000 (0x0060 - 0x0060)
class UNXPShowCartDialogInterface final : public UDefaultWebBrowserAdapter
{
public:
	void FailCommerceService(const class FString& Param);
	void SuccessCommerceService(const class FString& Param);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NXPShowCartDialogInterface">();
	}
	static class UNXPShowCartDialogInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNXPShowCartDialogInterface>();
	}
};

// Class NexonPlatform.NXPSurveyInterface
// 0x0000 (0x0060 - 0x0060)
class UNXPSurveyInterface final : public UDefaultWebBrowserAdapter
{
public:
	void GetUniqueID();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NXPSurveyInterface">();
	}
	static class UNXPSurveyInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNXPSurveyInterface>();
	}
};

// Class NexonPlatform.NXPToyCSInterface
// 0x0000 (0x0060 - 0x0060)
class UNXPToyCSInterface final : public UDefaultWebBrowserAdapter
{
public:
	void OpenNCSForNonMember() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NXPToyCSInterface">();
	}
	static class UNXPToyCSInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNXPToyCSInterface>();
	}
};

// Class NexonPlatform.NXPToyPreferences
// 0x0210 (0x0238 - 0x0028)
class UNXPToyPreferences final : public UObject
{
public:
	TMap<class FString, class FString>            BannerDoNotShowToday;                              // 0x0028(0x0050)(Config, NativeAccessSpecifierPrivate)
	TArray<class FString>                         ConditionalBannerDoNotShowAnymore;                 // 0x0078(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            ConditionalBannerDoNotShowToday;                   // 0x0088(0x0050)(Config, NativeAccessSpecifierPrivate)
	TMap<class FString, int32>                    ConditionalBannerTotalDisplayCount;                // 0x00D8(0x0050)(Config, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            ConditionalBannerLastDisplayDateTime;              // 0x0128(0x0050)(Config, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            TodayDoNotShowToday;                               // 0x0178(0x0050)(Config, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            EveTodayDoNotShowToday;                            // 0x01C8(0x0050)(Config, NativeAccessSpecifierPrivate)
	class FString                                 NXID;                                              // 0x0218(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 NXPW;                                              // 0x0228(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NXPToyPreferences">();
	}
	static class UNXPToyPreferences* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNXPToyPreferences>();
	}
};

// Class NexonPlatform.NXPEveInterface
// 0x0000 (0x0060 - 0x0060)
class UNXPEveInterface final : public UDefaultWebBrowserAdapter
{
public:
	void billingPayment(const class FString& ProductId, const class FString& Callback_0) const;
	void billingRequestProducts(const TArray<class FString>& ProductIds, const class FString& Callback_0) const;
	void Callback(const class FString& ErrorCode, const class FString& Message) const;
	void DismissWebView(const class FString& Callback) const;
	void DoNotShowToday(const class FString& PlacementId, const class FString& State) const;
	void GetCountry(const class FString& Callback) const;
	void GetDisplayCutout(const class FString& Callback) const;
	void GetLocale(const class FString& Callback) const;
	void GetUserInfo(const class FString& Callback) const;
	void OpenLink(const class FString& EveLinkJsonString, const class FString& Callback) const;
	void SaveEveUserInfo(const class FString& UserInfo) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NXPEveInterface">();
	}
	static class UNXPEveInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNXPEveInterface>();
	}
};

}

