#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioWidgets

#include "Basic.hpp"

#include "AudioWidgets_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class AudioWidgets.AudioMeter
// 0x0510 (0x0640 - 0x0130)
class UAudioMeter final : public UWidget
{
public:
	TArray<struct FMeterChannelInfo>              MeterChannelInfo;                                  // 0x0130(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             MeterChannelInfoDelegate;                          // 0x0140(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAudioMeterStyle                       WidgetStyle;                                       // 0x0150(0x0460)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOrientation                                  Orientation;                                       // 0x05B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x05B4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterBackgroundColor;                              // 0x05C4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterValueColor;                                   // 0x05D4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterPeakColor;                                    // 0x05E4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterClippingColor;                                // 0x05F4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterScaleColor;                                   // 0x0604(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterScaleLabelColor;                              // 0x0614(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_624[0x1C];                                     // 0x0624(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FMeterChannelInfo> GetMeterChannelInfo__DelegateSignature();
	void SetBackgroundColor(const struct FLinearColor& InValue);
	void SetMeterBackgroundColor(const struct FLinearColor& InValue);
	void SetMeterChannelInfo(const TArray<struct FMeterChannelInfo>& InMeterChannelInfo);
	void SetMeterClippingColor(const struct FLinearColor& InValue);
	void SetMeterPeakColor(const struct FLinearColor& InValue);
	void SetMeterScaleColor(const struct FLinearColor& InValue);
	void SetMeterScaleLabelColor(const struct FLinearColor& InValue);
	void SetMeterValueColor(const struct FLinearColor& InValue);

	TArray<struct FMeterChannelInfo> GetMeterChannelInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMeter">();
	}
	static class UAudioMeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMeter>();
	}
};

// Class AudioWidgets.AudioRadialSlider
// 0x0200 (0x0330 - 0x0130)
class alignas(0x10) UAudioRadialSlider : public UWidget
{
public:
	float                                         Value;                                             // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             ValueDelegate;                                     // 0x0134(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioRadialSliderLayout                      WidgetLayout;                                      // 0x0144(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CenterBackgroundColor;                             // 0x0148(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderProgressColor;                               // 0x0158(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBarColor;                                    // 0x0168(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              HandStartEndRatio;                                 // 0x0178(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   UnitsText;                                         // 0x0180(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FLinearColor                           TextLabelBackgroundColor;                          // 0x0198(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowLabelOnlyOnHover;                              // 0x01A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowUnitsText;                                     // 0x01A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsUnitsTextReadOnly;                               // 0x01AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueTextReadOnly;                               // 0x01AB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SliderThickness;                                   // 0x01AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              OutputRange;                                       // 0x01B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x01B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C8[0x168];                                    // 0x01C8(0x0168)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetOutputValue(const float InSliderValue);
	float GetSliderValue(const float OutputValue);
	void SetCenterBackgroundColor(const struct FLinearColor& InValue);
	void SetHandStartEndRatio(const struct FVector2D& InHandStartEndRatio);
	void SetOutputRange(const struct FVector2D& InOutputRange);
	void SetShowLabelOnlyOnHover(const bool bShowLabelOnlyOnHover);
	void SetShowUnitsText(const bool bShowUnitsText);
	void SetSliderBarColor(const struct FLinearColor& InValue);
	void SetSliderProgressColor(const struct FLinearColor& InValue);
	void SetSliderThickness(const float InThickness);
	void SetTextLabelBackgroundColor(const struct FSlateColor& InColor);
	void SetUnitsText(const class FText& Units);
	void SetUnitsTextReadOnly(const bool bIsReadOnly);
	void SetValueTextReadOnly(const bool bIsReadOnly);
	void SetWidgetLayout(EAudioRadialSliderLayout InLayout);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioRadialSlider">();
	}
	static class UAudioRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioRadialSlider>();
	}
};

// Class AudioWidgets.AudioVolumeRadialSlider
// 0x0000 (0x0330 - 0x0330)
class UAudioVolumeRadialSlider final : public UAudioRadialSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioVolumeRadialSlider">();
	}
	static class UAudioVolumeRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioVolumeRadialSlider>();
	}
};

// Class AudioWidgets.AudioFrequencyRadialSlider
// 0x0000 (0x0330 - 0x0330)
class UAudioFrequencyRadialSlider final : public UAudioRadialSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioFrequencyRadialSlider">();
	}
	static class UAudioFrequencyRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioFrequencyRadialSlider>();
	}
};

// Class AudioWidgets.AudioSliderBase
// 0x07C0 (0x08F0 - 0x0130)
class alignas(0x10) UAudioSliderBase : public UWidget
{
public:
	float                                         Value;                                             // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UnitsText;                                         // 0x0138(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FLinearColor                           TextLabelBackgroundColor;                          // 0x0150(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             TextLabelBackgroundColorDelegate;                  // 0x0160(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowLabelOnlyOnHover;                              // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowUnitsText;                                     // 0x0171(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsUnitsTextReadOnly;                               // 0x0172(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueTextReadOnly;                               // 0x0173(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             ValueDelegate;                                     // 0x0174(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBackgroundColor;                             // 0x0184(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderBackgroundColorDelegate;                     // 0x0194(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBarColor;                                    // 0x01A4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderBarColorDelegate;                            // 0x01B4(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderThumbColor;                                  // 0x01C4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderThumbColorDelegate;                          // 0x01D4(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           WidgetBackgroundColor;                             // 0x01E4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             WidgetBackgroundColorDelegate;                     // 0x01F4(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrientation                                  Orientation;                                       // 0x0204(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x0208(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_218[0x6D8];                                    // 0x0218(0x06D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetLinValue(const float OutputValue);
	float GetOutputValue(const float InSliderValue);
	float GetSliderValue(const float OutputValue);
	void SetShowLabelOnlyOnHover(const bool bShowLabelOnlyOnHover);
	void SetShowUnitsText(const bool bShowUnitsText);
	void SetSliderBackgroundColor(const struct FLinearColor& InValue);
	void SetSliderBarColor(const struct FLinearColor& InValue);
	void SetSliderThumbColor(const struct FLinearColor& InValue);
	void SetTextLabelBackgroundColor(const struct FSlateColor& InColor);
	void SetUnitsText(const class FText& Units);
	void SetUnitsTextReadOnly(const bool bIsReadOnly);
	void SetValueTextReadOnly(const bool bIsReadOnly);
	void SetWidgetBackgroundColor(const struct FLinearColor& InValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioSliderBase">();
	}
	static class UAudioSliderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioSliderBase>();
	}
};

// Class AudioWidgets.AudioSlider
// 0x0010 (0x0900 - 0x08F0)
class UAudioSlider : public UAudioSliderBase
{
public:
	TWeakObjectPtr<class UCurveFloat>             LinToOutputCurve;                                  // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UCurveFloat>             OutputToLinCurve;                                  // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioSlider">();
	}
	static class UAudioSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioSlider>();
	}
};

// Class AudioWidgets.AudioVolumeSlider
// 0x0000 (0x0900 - 0x0900)
class UAudioVolumeSlider final : public UAudioSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioVolumeSlider">();
	}
	static class UAudioVolumeSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioVolumeSlider>();
	}
};

// Class AudioWidgets.AudioFrequencySlider
// 0x0010 (0x0900 - 0x08F0)
class UAudioFrequencySlider final : public UAudioSliderBase
{
public:
	struct FVector2D                              OutputRange;                                       // 0x08F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F8[0x8];                                      // 0x08F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioFrequencySlider">();
	}
	static class UAudioFrequencySlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioFrequencySlider>();
	}
};

}

