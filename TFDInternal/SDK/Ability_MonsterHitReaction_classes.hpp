#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_MonsterHitReaction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M1_structs.hpp"
#include "M1_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ability_MonsterHitReaction.Ability_MonsterHitReaction_C
// 0x00F0 (0x0390 - 0x02A0)
class UAbility_MonsterHitReaction_C final : public UM1Ability
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FM1NormalMonsterHitReactionData> ConfigHitReactionData;                             // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UM1AbilityTask_WaitDelay*               LoopAnimationTriggerTask;                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_WaitDelay*               ResetPlayCountAndHitPartsTask;                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FM1NormalMonsterHitReactionData        UpdateHitReactionData;                             // 0x02C8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FM1NormalMonsterHitReactionData        CurrentHitReactionData;                            // 0x0320(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UM1AbilityTask_WaitDelay*               WaitShakeEndTask;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HitDefaultCoolTime;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastHitReactionTime;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WaitShakeEnd();
	void WaitAnimationEnd();
	void TryFillHitReactionData(bool* bSuccess);
	void ResetPlayCountAndHitParts();
	void ResetLoopAnimationTriggerWithDelay();
	void OnFinish_9E01B27043A751769011D993AC566BC6();
	void OnFinish_7F20141544ECD76BD8D4308ED014768A();
	void OnFinish_1701721E4A50F5BD911C04A56D969E5A();
	void OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6(const struct FM1AbilityEvent& Event);
	void HandleHitReaction(const struct FM1AbilityEvent& InAbilityEvent);
	void GetAnimLengthOfMaxDamagedParts(float* AnimLength);
	void FindConfigIndexByPartsName(class FName PartsName, int32* ConfigIndex);
	void FindConfigDataByBoneName(class FName InBoneName, struct FM1NormalMonsterHitReactionData* FoundData);
	void ExecuteUbergraph_Ability_MonsterHitReaction(int32 EntryPoint);
	void CheckCanHandleHitReaction(const struct FGameplayTag& InTag, const struct FM1CalcDamageInfo& InDamageInfo, bool* bCanHandle);
	void BP_OnActivated();
	void ApplyShake(const struct FM1CalcDamageInfo& DamageInfo);
	void ApplyHitReactionData();
	void ApplyHitReaction(const struct FM1CalcDamageInfo& InDamageInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ability_MonsterHitReaction_C">();
	}
	static class UAbility_MonsterHitReaction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbility_MonsterHitReaction_C>();
	}
};

}

