#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PinPoint

#include "Basic.hpp"

#include "BP_PinPoint_classes.hpp"
#include "BP_PinPoint_parameters.hpp"


namespace SDK
{

// Function BP_PinPoint.BP_PinPoint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PinPoint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PinPoint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PinPoint.BP_PinPoint_C.ExecuteUbergraph_BP_PinPoint
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PinPoint_C::ExecuteUbergraph_BP_PinPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PinPoint_C", "ExecuteUbergraph_BP_PinPoint");

	Params::BP_PinPoint_C_ExecuteUbergraph_BP_PinPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PinPoint.BP_PinPoint_C.BP_NotifyUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// EM1PinPointType                         InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsMe                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PinPoint_C::BP_NotifyUpdate(EM1PinPointType InType, bool bIsMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PinPoint_C", "BP_NotifyUpdate");

	Params::BP_PinPoint_C_BP_NotifyUpdate Parms{};

	Parms.InType = InType;
	Parms.bIsMe = bIsMe;

	UObject::ProcessEvent(Func, &Parms);
}

}

